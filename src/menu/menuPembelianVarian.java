/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package menu;

import java.sql.PreparedStatement;
import java.sql.Connection;
import config.koneksi;
import custom.JTextFieldRounded;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import notification.Notification;

/**
 *
 * @author user
 */
public class menuPembelianVarian extends javax.swing.JPanel {

    /**
     * Creates new form menuBahan
     */
    private int halamanSaatIni = 1;
    private int dataPerHalaman = 20;
    private int totalPages;
    private String id_user;
    
    private final Connection conn;
    public menuPembelianVarian(String id_user) {
        initComponents();
        
        conn = koneksi.getConnection();
        this.id_user = id_user;
        loadData();
        setTabelModel();
        setTabelModelDetail();
        setTabelModelSementara();
        paginationVarian();
        countHarga();
        enabledFalse();
        btnCancel1.setVisible(false);
        noText();
        
        setTabelModelSementara();
        loadDataSementara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        panelMain = new javax.swing.JPanel();
        panelView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new custom.JTextFieldRounded();
        btnAdd = new rojerusan.RSMaterialButtonRectangle();
        databahan1 = new javax.swing.JLabel();
        pnDetail = new javax.swing.JPanel();
        databahan = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDataDetail = new javax.swing.JTable();
        btnCloseDetail = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btn_first = new javax.swing.JButton();
        btn_before = new javax.swing.JButton();
        cbx_data = new javax.swing.JComboBox<>();
        btn_next = new javax.swing.JButton();
        btn_last = new javax.swing.JButton();
        lb_halaman = new javax.swing.JLabel();
        panelAdd = new javax.swing.JPanel();
        menubahan = new javax.swing.JLabel();
        namabahan = new javax.swing.JLabel();
        stokbahan = new javax.swing.JLabel();
        satuan = new javax.swing.JLabel();
        txtNama = new custom.JTextFieldRounded();
        txtIdVarian = new custom.JTextFieldRounded();
        btnSave = new rojerusan.RSMaterialButtonRectangle();
        batal2 = new rojerusan.RSMaterialButtonRectangle();
        stokbahan1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtId = new custom.JTextFieldRounded();
        stokbahan2 = new javax.swing.JLabel();
        txtTotalPembelian = new custom.JTextFieldRounded();
        stokbahan3 = new javax.swing.JLabel();
        txtTanggalPembelian = new custom.JTextFieldRounded();
        stokbahan7 = new javax.swing.JLabel();
        btnSetVarian = new javax.swing.JButton();
        txtStokVarian = new custom.JTextFieldRounded();
        txtSatuanVarian = new custom.JTextFieldRounded();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDataSementara = new javax.swing.JTable();
        btnUbah = new rojerusan.RSMaterialButtonRectangle();
        btnDelete = new rojerusan.RSMaterialButtonRectangle();
        btnCancel1 = new rojerusan.RSMaterialButtonRectangle();
        stokbahan4 = new javax.swing.JLabel();
        txtStok = new custom.JTextFieldRounded();
        namabahan1 = new javax.swing.JLabel();
        txtHargaBeli = new custom.JTextFieldRounded();
        cbxSatuan = new javax.swing.JComboBox<>();
        stokbahan5 = new javax.swing.JLabel();
        txtJumlahBeli = new custom.JTextFieldRounded();
        stokbahan6 = new javax.swing.JLabel();
        stokbahan8 = new javax.swing.JLabel();
        txtHargaSatuan = new custom.JTextFieldRounded();
        btnGenerate = new rojerusan.RSMaterialButtonRectangle();
        btnBatalGenerate = new rojerusan.RSMaterialButtonRectangle();

        dateChooser1.setTextRefernce(txtTanggalPembelian);

        setLayout(new java.awt.CardLayout());

        panelMain.setLayout(new java.awt.CardLayout());

        panelView.setBackground(new java.awt.Color(255, 255, 255));

        tblData.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Pembelian Varian", "Tanggal Pembelian", "Total Harga Pembelian", "Petugas"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N

        txtSearch.setForeground(new java.awt.Color(102, 102, 102));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnAdd.setText("TAMBAH");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        databahan1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        databahan1.setForeground(new java.awt.Color(102, 102, 102));
        databahan1.setText("Menu Pembelian Varian");

        pnDetail.setBackground(new java.awt.Color(255, 255, 255));

        databahan.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        databahan.setForeground(new java.awt.Color(102, 102, 102));
        databahan.setText("Detail Pembelian Varian");

        tblDataDetail.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblDataDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Pembelian Varian", "ID Varian", "Jumlah", "Satuan", "Harga Beli"
            }
        ));
        tblDataDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataDetailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDataDetail);

        btnCloseDetail.setForeground(new java.awt.Color(102, 102, 102));
        btnCloseDetail.setText("X");
        btnCloseDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseDetailMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnDetailLayout = new javax.swing.GroupLayout(pnDetail);
        pnDetail.setLayout(pnDetailLayout);
        pnDetailLayout.setHorizontalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDetailLayout.createSequentialGroup()
                .addContainerGap(1216, Short.MAX_VALUE)
                .addComponent(btnCloseDetail)
                .addContainerGap())
            .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDetailLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(databahan))
                    .addContainerGap()))
        );
        pnDetailLayout.setVerticalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addComponent(btnCloseDetail)
                .addGap(0, 208, Short.MAX_VALUE))
            .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnDetailLayout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(databahan)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addGap(9, 9, 9)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btn_first.setText("First Page");

        btn_before.setText("<");

        cbx_data.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "25", "30" }));

        btn_next.setText(">");

        btn_last.setText("Last Page");
        btn_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lastActionPerformed(evt);
            }
        });

        lb_halaman.setText("Halaman Of Total Halaman");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(497, 497, 497)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(lb_halaman))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btn_before, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(cbx_data, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(btn_next, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(btn_last, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(283, 283, 283))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(lb_halaman)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_first)
                    .addComponent(btn_before)
                    .addComponent(cbx_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_next)
                    .addComponent(btn_last))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(databahan1)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(895, 895, 895)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(databahan1)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1))
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        panelMain.add(panelView, "card2");

        panelAdd.setBackground(new java.awt.Color(255, 255, 255));
        panelAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menubahan.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        menubahan.setForeground(new java.awt.Color(102, 102, 102));
        menubahan.setText("Tambah Menu Pembelian Varian");
        panelAdd.add(menubahan, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        namabahan.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        namabahan.setForeground(new java.awt.Color(102, 102, 102));
        namabahan.setText("Nama");
        panelAdd.add(namabahan, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, 37));

        stokbahan.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan.setText("Varian");
        panelAdd.add(stokbahan, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        satuan.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        satuan.setForeground(new java.awt.Color(102, 102, 102));
        satuan.setText("Stok");
        panelAdd.add(satuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));
        panelAdd.add(txtNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 260, 182, -1));

        txtIdVarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdVarianActionPerformed(evt);
            }
        });
        panelAdd.add(txtIdVarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 210, 182, 40));

        btnSave.setText("SIMPAN");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        panelAdd.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 95, 49));

        batal2.setBackground(new java.awt.Color(255, 102, 0));
        batal2.setText("BATAL");
        batal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batal2ActionPerformed(evt);
            }
        });
        panelAdd.add(batal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 95, 49));

        stokbahan1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan1.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan1.setText("Satuan");
        panelAdd.add(stokbahan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        stokbahan2.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan2.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan2.setText("ID");

        txtTotalPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalPembelianActionPerformed(evt);
            }
        });

        stokbahan3.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan3.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan3.setText("Tanggal Pembelian");

        stokbahan7.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan7.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan7.setText("Total Pembelian");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stokbahan2)
                .addGap(74, 74, 74)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(stokbahan3)
                .addGap(51, 51, 51)
                .addComponent(txtTanggalPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(stokbahan7)
                .addGap(28, 28, 28)
                .addComponent(txtTotalPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stokbahan2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotalPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stokbahan3)
                        .addComponent(txtTanggalPembelian, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stokbahan7)))
                .addContainerGap())
        );

        panelAdd.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 140, 1220, -1));

        btnSetVarian.setText("...");
        btnSetVarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetVarianActionPerformed(evt);
            }
        });
        panelAdd.add(btnSetVarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 210, 38, 40));
        panelAdd.add(txtStokVarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 310, 182, -1));
        panelAdd.add(txtSatuanVarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(131, 360, 182, -1));

        tblDataSementara.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblDataSementara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Pembelian", "ID Varian", "Nama Varian", "Stok", "Satuan", "Jumlah", "Satuan", "Total Stok", "Harga Beli", "Harga Satuan"
            }
        ));
        tblDataSementara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataSementaraMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDataSementara);

        panelAdd.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 1220, 140));

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        panelAdd.add(btnUbah, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 95, 49));

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("HAPUS");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelAdd.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 95, 49));

        btnCancel1.setBackground(new java.awt.Color(255, 102, 0));
        btnCancel1.setText("BATAL");
        btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel1ActionPerformed(evt);
            }
        });
        panelAdd.add(btnCancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 420, 95, 49));

        stokbahan4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan4.setText("Harga Beli");
        panelAdd.add(stokbahan4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 220, -1, -1));
        panelAdd.add(txtStok, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, 182, 40));

        namabahan1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        namabahan1.setText("Satuan");
        panelAdd.add(namabahan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, -1, 37));
        panelAdd.add(txtHargaBeli, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 210, 182, -1));

        cbxSatuan.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cbxSatuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Satuan Varian", "Item", "Gram", "Renteng" }));
        panelAdd.add(cbxSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, 180, 40));

        stokbahan5.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan5.setText("Jumlah Beli");
        panelAdd.add(stokbahan5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, -1, -1));

        txtJumlahBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJumlahBeliActionPerformed(evt);
            }
        });
        panelAdd.add(txtJumlahBeli, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 182, 40));

        stokbahan6.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan6.setText("Total Stok");
        panelAdd.add(stokbahan6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, -1, -1));

        stokbahan8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        stokbahan8.setForeground(new java.awt.Color(102, 102, 102));
        stokbahan8.setText("Harga/satuan");
        panelAdd.add(stokbahan8, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 270, -1, -1));

        txtHargaSatuan.setForeground(new java.awt.Color(102, 102, 102));
        txtHargaSatuan.setText("Enter after input harga beli..");
        panelAdd.add(txtHargaSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 260, 182, -1));

        btnGenerate.setBackground(new java.awt.Color(51, 153, 255));
        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });
        panelAdd.add(btnGenerate, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 250, 95, 49));

        btnBatalGenerate.setBackground(new java.awt.Color(255, 102, 0));
        btnBatalGenerate.setText("BATAL");
        btnBatalGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalGenerateActionPerformed(evt);
            }
        });
        panelAdd.add(btnBatalGenerate, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 300, 95, 49));

        panelMain.add(panelAdd, "card2");

        add(panelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        panelMain.removeAll();
        panelMain.add(panelAdd);
        panelMain.repaint();
        panelMain.revalidate();
        
        txtId.setText(setIdPembelianVarian());
        btnUbah.setText("SIMPAN");
        btnDelete.setVisible(false);
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void batal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batal2ActionPerformed
        deleteDataSementara();
        showPanel();
        loadData();
    }//GEN-LAST:event_batal2ActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        pnDetail.setVisible(true);
        
        int row = tblData.getSelectedRow();
        String id = tblData.getValueAt(row, 0).toString();
        getDataDetail((DefaultTableModel) tblDataDetail.getModel(), id);
    }//GEN-LAST:event_tblDataMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        searchData();
    }//GEN-LAST:event_txtSearchKeyTyped

    private void tblDataDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataDetailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDataDetailMouseClicked

    private void btn_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_lastActionPerformed

    private void btnSetVarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetVarianActionPerformed
        setVarian();
    }//GEN-LAST:event_btnSetVarianActionPerformed

    private void tblDataSementaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataSementaraMouseClicked
        cbxSatuan.setEnabled(true);
        btnUbah.setText("UBAH");
        btnDelete.setVisible(true);
        btnUbah.setVisible(true);
        dataTabelSementara();
        btnGenerate.setVisible(true);
        btnBatalGenerate.setVisible(true);
        btnSetVarian.setVisible(false);
        btnCancel1.setVisible(true);
        txtJumlahBeli.setEnabled(true);
        txtHargaBeli.setEnabled(true);
    }//GEN-LAST:event_tblDataSementaraMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        if (btnUbah.getText().equals("SIMPAN")) {
        insertDataSementara();
        } else if(btnUbah.getText().equals("UBAH")){
        updateData();
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteData();
        btnUbah.setText("SIMPAN");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel1ActionPerformed
        loadDataSementara();
        resetForm();
        btnUbah.setVisible(false);
        btnDelete.setVisible(false);
        btnCancel1.setVisible(false);
        btnGenerate.setVisible(false);
        btnBatalGenerate.setVisible(false);
        txtJumlahBeli.setEnabled(false);
        txtHargaBeli.setEnabled(false);
        cbxSatuan.setEnabled(false);
    }//GEN-LAST:event_btnCancel1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(btnSave.getText().equals("TAMBAH"))
        {
            btnSave.setText("SIMPAN");
        }
        else if(btnSave.getText().equals("SIMPAN"))
        {
            if (JOptionPane.showConfirmDialog(this, "Yakin sudah benar?", "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) { 
            insertData();
            insertDataDetail();
            deleteDataSementara();
            resetForm();
            loadData();
            showPanel();
            } else {
                resetForm();
                loadDataSementara();
            }
        }
        else if (btnSave.getText().equals("PERBARUI"))
        {
            updateData();
            resetForm();
            loadData();
            showPanel();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtIdVarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdVarianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdVarianActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        if  (txtJumlahBeli.getText().equals("")) { 
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.INFO, Notification.Location.TOP_CENTER, "INPUT JUMLAH BELI!");
            panel.showNotification();
            }
            return;
        } else if (cbxSatuan.getSelectedItem().toString().equals("Pilih Satuan Varian")) {
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.INFO, Notification.Location.TOP_CENTER, "PILIH SATUAN VARIAN!");
            panel.showNotification();
            }
            return; 
        } 
        int jumlahBeli = Integer.parseInt(txtJumlahBeli.getText());
        String satuan = cbxSatuan.getSelectedItem().toString();
        int stok = calculateStok(jumlahBeli, satuan);

        txtStok.setText(String.valueOf(stok));
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnBatalGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalGenerateActionPerformed
        resetFormGenerate();
    }//GEN-LAST:event_btnBatalGenerateActionPerformed

    private void btnCloseDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseDetailMouseClicked
        showPanel();
        loadData();
    }//GEN-LAST:event_btnCloseDetailMouseClicked

    private void txtJumlahBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJumlahBeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJumlahBeliActionPerformed

    private void txtTotalPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalPembelianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalPembelianActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle batal2;
    private rojerusan.RSMaterialButtonRectangle btnAdd;
    private rojerusan.RSMaterialButtonRectangle btnBatalGenerate;
    private rojerusan.RSMaterialButtonRectangle btnCancel1;
    private javax.swing.JButton btnCloseDetail;
    private rojerusan.RSMaterialButtonRectangle btnDelete;
    private rojerusan.RSMaterialButtonRectangle btnGenerate;
    private rojerusan.RSMaterialButtonRectangle btnSave;
    private javax.swing.JButton btnSetVarian;
    private rojerusan.RSMaterialButtonRectangle btnUbah;
    private javax.swing.JButton btn_before;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_last;
    private javax.swing.JButton btn_next;
    private javax.swing.JComboBox<String> cbxSatuan;
    private javax.swing.JComboBox<String> cbx_data;
    private javax.swing.JLabel databahan;
    private javax.swing.JLabel databahan1;
    private com.raven.datechooser.DateChooser dateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lb_halaman;
    private javax.swing.JLabel menubahan;
    private javax.swing.JLabel namabahan;
    private javax.swing.JLabel namabahan1;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelView;
    private javax.swing.JPanel pnDetail;
    private javax.swing.JLabel satuan;
    private javax.swing.JLabel stokbahan;
    private javax.swing.JLabel stokbahan1;
    private javax.swing.JLabel stokbahan2;
    private javax.swing.JLabel stokbahan3;
    private javax.swing.JLabel stokbahan4;
    private javax.swing.JLabel stokbahan5;
    private javax.swing.JLabel stokbahan6;
    private javax.swing.JLabel stokbahan7;
    private javax.swing.JLabel stokbahan8;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblDataDetail;
    private javax.swing.JTable tblDataSementara;
    private custom.JTextFieldRounded txtHargaBeli;
    private custom.JTextFieldRounded txtHargaSatuan;
    private custom.JTextFieldRounded txtId;
    private custom.JTextFieldRounded txtIdVarian;
    private custom.JTextFieldRounded txtJumlahBeli;
    private custom.JTextFieldRounded txtNama;
    private custom.JTextFieldRounded txtSatuanVarian;
    private custom.JTextFieldRounded txtSearch;
    private custom.JTextFieldRounded txtStok;
    private custom.JTextFieldRounded txtStokVarian;
    private custom.JTextFieldRounded txtTanggalPembelian;
    private custom.JTextFieldRounded txtTotalPembelian;
    // End of variables declaration//GEN-END:variables
    
    private void enabledFalse() {
        txtStok.setEnabled(false);
        txtHargaSatuan.setEnabled(false);
        txtId.setEnabled(false);
        txtIdVarian.setEnabled(false);
        txtNama.setEnabled(false);
        txtStokVarian.setEnabled(false);
        txtSatuanVarian.setEnabled(false);
        txtTotalPembelian.setEnabled(false);
        txtTanggalPembelian.setEnabled(false);
    }
    
    private void noText() {
    txtJumlahBeli.addKeyListener(new java.awt.event.KeyAdapter() { 
        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            // Periksa apakah karakter bukan digit atau bukan kontrol
            if (!Character.isDigit(c) && !Character.isISOControl(c)) {
                evt.consume(); // Mengabaikan karakter input
                // Mendapatkan parent JFrame dari txtNomor
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(txtJumlahBeli);
                if (frame != null) {
                    SwingUtilities.invokeLater(() -> {
                        Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "Input harus berupa angka!");
                        panel.showNotification();
                    });
                }
            }
            }
    });
    
    txtHargaBeli.addKeyListener(new java.awt.event.KeyAdapter() { 
        @Override
        public void keyTyped(java.awt.event.KeyEvent evt) {
            char c = evt.getKeyChar();
            // Periksa apakah karakter bukan digit atau bukan kontrol
            if (!Character.isDigit(c) && !Character.isISOControl(c)) {
                evt.consume(); // Mengabaikan karakter input
                // Mendapatkan parent JFrame dari txtNomor
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(txtHargaBeli);
                if (frame != null) {
                    SwingUtilities.invokeLater(() -> {
                        Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "Input harus berupa angka!");
                        panel.showNotification();
                    });
                }
            }
            }
    });
    }
    
    private void countHarga() {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        txtHargaBeli.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            String hargaBeliText = txtHargaBeli.getText();
            String stokText = txtStok.getText(); 

            if (hargaBeliText.isEmpty()) {
                if (frame != null) {
                Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "INPUT HARGA BELI!");
                panel.showNotification();
                }
                return; 
            }

            if (stokText.isEmpty() || Integer.parseInt(stokText) == 0) {
                if (frame != null) {
                Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "STOK TIDAK BOLEH KOSONG!");
                panel.showNotification();
                }
                return; 
            }

            int hargaBeli = Integer.parseInt(hargaBeliText);
            int stok = Integer.parseInt(stokText);

            int hargaPerSatuan = hargaBeli / stok; 

            txtHargaSatuan.setText(String.valueOf(hargaPerSatuan)); 
            
            
        }
    });
    }
    
    private void paginationVarian() {
        btn_first.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                halamanSaatIni = 1;
                loadData();
            }
            
        });
        
        btn_before.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if (halamanSaatIni > 1)
                {
                    halamanSaatIni--;
                    loadData();
                }
            }
            
        });
        
        cbx_data.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                dataPerHalaman = Integer.parseInt(cbx_data.getSelectedItem().toString());
                halamanSaatIni = 1;
                loadData();
            }
            
        });
        
        btn_next.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if (halamanSaatIni < totalPages) {
                    halamanSaatIni++;
                    loadData();
                }
            }
            
        });
        
        btn_last.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                halamanSaatIni = totalPages;
                loadData();
            }
            
        });
    }
    
    private void calculateTotalPages(){
    int totalData = getTotalData(); // Ambil total data dari tabel
    totalPages = (int) Math.ceil((double) totalData / dataPerHalaman);
    }
    
    private int getTotalData(){
        int totalData = 0;
        
        try {
            String sql = "SELECT COUNT(*) AS total FROM pembelian_varian";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                if(rs.next()){
                    totalData = rs.getInt("total");
                }
            } 
        }catch (Exception e) {     
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE,null, e);
        }
        return totalData;
    }
    
    private void loadData() {
    calculateTotalPages();
    int totalData = getTotalData();
    lb_halaman.setText(String.valueOf("Halaman " + halamanSaatIni + " dari Total Data " + totalData));
    
    int startIndex = (halamanSaatIni - 1) * dataPerHalaman; // Indeks awal untuk pagination
    getData(startIndex, dataPerHalaman, (DefaultTableModel) tblData.getModel());
    btnDelete.setVisible(false);
    pnDetail.setVisible(false);
}
    
    private void resetForm() {
        txtIdVarian.setText("");
        txtNama.setText("");
        txtStokVarian.setText("");
        txtSatuanVarian.setText("");
        txtJumlahBeli.setText("");
        cbxSatuan.setSelectedItem("Pilih Satuan Varian");
        txtStok.setText("");
        txtHargaBeli.setText("");
        txtHargaSatuan.setText("");
    }
    
    private void resetFormGenerate() {
        txtJumlahBeli.setText("");
        cbxSatuan.setSelectedItem("Pilih Satuan Varian");
        txtStok.setText("");
    }
    
    private void showPanel(){
        panelMain.removeAll();
        panelMain.add(new menuPembelianVarian(id_user));
        panelMain.repaint();
        panelMain.revalidate();
    }
    
    private void setTabelModel() {
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
    }
    
    private void setTabelModelDetail() {
        DefaultTableModel model = (DefaultTableModel) tblDataDetail.getModel();
    }
    
    public void getDataDetail(DefaultTableModel model, String id) {
        model.setRowCount(0);
        
        try {
           String sql = "SELECT * FROM detail_pembelian_varian WHERE id_pembelian_varian = '"+id+"'";
           try (PreparedStatement st = conn.prepareStatement(sql)) {
               ResultSet rs = st.executeQuery();
               
               while (rs.next()) {
                    String idPembelianVarian = rs.getString("id_pembelian_varian");
                    String idVarian          = rs.getString("id_varian");
                    int jumlah               = rs.getInt("jumlah");
                    String satuan            = rs.getString("satuan");
                    int hargaBeli           = rs.getInt("harga_beli");
                    

                    Object[] rowData = {idPembelianVarian, idVarian, jumlah, satuan,hargaBeli };
                    model.addRow(rowData);
                }
           }
        }catch (Exception e) {
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE,null, e);
        }
    }

    public void getData(int startIndex, int entriesPage, DefaultTableModel model) {
        model.setRowCount(0);
        
        try {
           String sql = "SELECT pv.id_pembelian_varian, pv.tgl_pembelian, pv.total_harga_pembelian, usr.nama FROM pembelian_varian pv "
                   + "INNER JOIN user usr ON pv.id_user = usr.id_user ORDER BY pv.id_pembelian_varian ASC LIMIT ?,?";
           try (PreparedStatement st = conn.prepareStatement(sql)) {
               st.setInt(1, startIndex);
               st.setInt(2, entriesPage);
               ResultSet rs = st.executeQuery();
               
               while (rs.next()) {
                    String idPembelianVarian = rs.getString("id_pembelian_varian");
                    String tglPembelian = rs.getString("tgl_pembelian");
                    int totalHargaPembelian = rs.getInt("total_harga_pembelian");
                    String namaUser = rs.getString("nama");

                    Object[] rowData = {idPembelianVarian, tglPembelian, totalHargaPembelian,namaUser};
                    model.addRow(rowData);
                }
           }
        }catch (Exception e) {
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE,null, e);
        }
    }

    private String setIdPembelianVarian() {
    String urutan = null;
    String prefix = "TRV";

    try {
        // Ambil semua ID yang ada
        String sql = "SELECT CAST(SUBSTRING(id_pembelian_varian, 4) AS UNSIGNED) AS Nomor FROM pembelian_varian WHERE id_pembelian_varian LIKE ? ORDER BY Nomor ASC";
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, prefix + "%");
            ResultSet rs = st.executeQuery();

            int expectedNomor = 1; // Mulai dari 1
            while (rs.next()) {
                int currentNomor = rs.getInt("Nomor");
                if (currentNomor != expectedNomor) {
                    // Jika ada gap, gunakan expectedNomor sebagai ID baru
                    urutan = prefix + String.format("%04d", expectedNomor);
                    return urutan;
                }
                expectedNomor++;
            }
            urutan = prefix + String.format("%04d", expectedNomor);
        }
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }

    return urutan;
    }
    
    private void setVarian(){
        boolean closable = true;
        dataVarian varian = new dataVarian(null, closable);
        varian.setVisible(true);
        
        txtIdVarian.setText(varian.getId_varian());
        txtNama.setText(varian.getNama_varian());
        txtStokVarian.setText(varian.getStok_varian());
        txtSatuanVarian.setText(varian.getSatuan());
        
        txtIdVarian.setEnabled(false);
        txtNama.setEnabled(false);
        txtStokVarian.setEnabled(false);
        txtSatuanVarian.setEnabled(false);
    }

    private int calculateStok(int jumlahBeli, String satuan) {
    int konversi = 1;
    
    switch (satuan) {
        case "Renteng":
            konversi = 10; 
            break;
        case "Gram":
        case "Item":
            konversi = 1;
            break;
    }
    return jumlahBeli * konversi;
}
    
    
    
    
    // SEMENTARA
    
    private void insertDataSementara() {
    String idPembelian = txtId.getText();
    String idVarian = txtIdVarian.getText();
    String namaVarian = txtNama.getText();
    String stok = txtStokVarian.getText();
    String satuanVarian = txtSatuanVarian.getText();
    String jumlahBeli = txtJumlahBeli.getText();
    String satuan = cbxSatuan.getSelectedItem().toString();
    String totalStok = txtStok.getText();
    String hargaBeli = txtHargaBeli.getText();
    String hargaSatuan = txtHargaSatuan.getText();
    
    if (idPembelian.isEmpty() || idVarian.isEmpty() || jumlahBeli.isEmpty() || cbxSatuan.getSelectedItem().toString().equals("Pilih Satuan Varian") || hargaBeli.isEmpty() 
            || txtStok.getText().isEmpty()) {
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "SEMUA KOLOM HARUS DI-ISI");
            panel.showNotification();
            }
            return;
    } else if(txtHargaSatuan.getText().equals("Enter after input harga beli..")) {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.INFO, Notification.Location.TOP_CENTER, "ENTER SETELAH MEMASUKKAN HARGA BELI");
            panel.showNotification();
        }
            return;
    }
    
    try {
        String sql = "INSERT INTO sementara_varian (id_pembelian_varian, id_varian,nama_varian,stok_varian,satuan_varian, "
                + "jumlah, satuan,stok, harga_beli, harga_satuan) VALUES (?,?,?,?,?,?,?,?,?,?)";
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, idPembelian);
            st.setString(2, idVarian);
            st.setString(3, namaVarian);
            st.setString(4, stok);
            st.setString(5, satuanVarian);
            st.setString(6, jumlahBeli);
            st.setString(7, satuan);
            st.setString(8, totalStok);
            st.setString(9, hargaBeli);
            st.setString(10, hargaSatuan);
            st.executeUpdate();
            
            
            // Update total harga
            int totalHarga = getTotalHarga(idPembelian);
            txtTotalPembelian.setText(String.valueOf(totalHarga));
            loadDataSementara();
            
            if (JOptionPane.showConfirmDialog(this, "Mau Tambah Pembelian Varian?", "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                resetForm();
                txtHargaSatuan.setText("Enter after input harga beli..");
            } else {
                resetForm();
                btnSave.requestFocus();
                btnSave.setEnabled(true);
                btnSetVarian.setVisible(false);
                btnUbah.setVisible(false);
                btnGenerate.setVisible(false);
                btnBatalGenerate.setVisible(false);
                batal2.setVisible(false);
                txtJumlahBeli.setEnabled(false);
                txtHargaBeli.setEnabled(false);
                cbxSatuan.setEnabled(false);
            }
        }
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }
}
    
    private int getTotalHarga(String idPembelian) {
    int totalHarga = 0;
    
    try {
        String sql = "SELECT SUM(" + totalHarga + " + harga_beli) AS total FROM sementara_varian WHERE id_pembelian_varian = ?";
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, idPembelian);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                totalHarga = rs.getInt("total");
            }
        } 
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }
    
    return totalHarga;
    }
    
    private void loadDataSementara() {
    // Menentukan batasan data yang ingin ditampilkan
    int startIndex = 0; // Anda bisa menyesuaikan ini sesuai kebutuhan
    int entriesPage = 10; // Misalnya, menampilkan 10 entri per halaman
    getDataSementara((DefaultTableModel) tblDataSementara.getModel(), startIndex, entriesPage);
}

public void getDataSementara(DefaultTableModel model, int startIndex, int entriesPage) {
    model.setRowCount(0);
    
    try {
       String sql = "SELECT * FROM sementara_varian LIMIT ?,?";
       try (PreparedStatement st = conn.prepareStatement(sql)) {
           st.setInt(1, startIndex);
           st.setInt(2, entriesPage);
           ResultSet rs = st.executeQuery();
           
           while (rs.next()) {
                String idPembelianVarian = rs.getString("id_pembelian_varian");
                String idVarian = rs.getString("id_varian");
                String namaVarian = rs.getString("nama_varian");
                String stok = rs.getString("stok_varian");
                String satuanVarian = rs.getString("satuan_varian");
                String jumlah = rs.getString("jumlah");
                String satuan = rs.getString("satuan");
                String totalStok = rs.getString("stok");
                String hargaBeli = rs.getString("harga_beli");
                String hargaSatuan = rs.getString("harga_satuan");

                Object[] rowData = {idPembelianVarian, idVarian,namaVarian, stok, satuanVarian, jumlah, satuan, totalStok, hargaBeli, hargaSatuan};
                model.addRow(rowData);
            }
       }
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }
}
     
    
    private void setTabelModelSementara() {
        DefaultTableModel model = (DefaultTableModel) tblDataSementara.getModel();
    }
    
    public void getDataSementara(DefaultTableModel model) {
        model.setRowCount(0);
        
        try {
           String sql = "SELECT * FROM sementara_varian LIMIT ?,?";
           try (PreparedStatement st = conn.prepareStatement(sql)) {
               
               ResultSet rs = st.executeQuery();
               
               while (rs.next()) {
                    String idPembelianVarian    = rs.getString("id_pembelian_varian");
                    String idVarian             = rs.getString("id_varian");
                    String namaVarian           = rs.getString("nama_varian");
                    String stok                 = rs.getString("stok_varian");
                    String satuanVarian         = rs.getString("satuan_varian");
                    String jumlah               = rs.getString("jumlah");
                    String satuan               = rs.getString("satuan");
                    String totalStok            = rs.getString("stok");
                    String hargaBeli            = rs.getString("harga_beli");
                    String hargaSatuan          = rs.getString("harga_satuan");
                    

                    Object[] rowData = {idPembelianVarian, idVarian,namaVarian, stok,satuanVarian, jumlah, satuan, stok, hargaBeli, hargaSatuan};
                    model.addRow(rowData);
                }
           }
        }catch (Exception e) {
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE,null, e);
        }
    }
    
    // main
    private void insertData() {
        String idPembelianVarian = txtId.getText();
        String tglPembelian      = txtTanggalPembelian.getText();
        String totalHargaBeli    = txtTotalPembelian.getText();
        
        // Convert the date format from 'dd-MM-yyyy' to 'yyyy-MM-dd'
        SimpleDateFormat inputFormat = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");

        try {
            Date date = inputFormat.parse(tglPembelian);
            tglPembelian = outputFormat.format(date);
        } catch (ParseException e) {
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "FORMAT TANGGAL TIDAK VALID");
            panel.showNotification();
            }
            return; 
        }
        if(idPembelianVarian.isEmpty() || tglPembelian.isEmpty() || totalHargaBeli.isEmpty()){
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "SEMUA KOLOM HARUS DI-ISI");
            panel.showNotification();
        }
            return;
        }
        
        try {
            String sql = "INSERT INTO pembelian_varian (id_pembelian_varian, tgl_pembelian, total_harga_pembelian,id_user) VALUES (?,?,?,?)";
            try(PreparedStatement st = conn.prepareStatement(sql)){
                st.setString(1, idPembelianVarian);
                st.setString(2, tglPembelian);
                st.setString(3, totalHargaBeli);
                st.setString(4, id_user);
                
                

                int rowInserted = st.executeUpdate();
                if(rowInserted > 0){
                    JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
                    if (frame != null) {
                        Notification panel = new Notification(frame, Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, "DATA BERHASIL DITAMBAHKAN");
                        panel.showNotification();
                    }
            
                    resetForm();
                    loadData();
                    showPanel();
                }
            }
        } catch (Exception e) {
            Logger.getLogger(menuPembelianBahan.class.getName()).log(Level.SEVERE,null, e);
        }
        
    }

    
    private void insertDataDetail() {
    String idPembelianVarian = txtId.getText();

    try {
        String insertSQL = "INSERT INTO detail_pembelian_varian (id_pembelian_varian, id_varian, jumlah, satuan, harga_beli) "
                         + "SELECT ?, id_varian, jumlah, satuan, harga_beli FROM sementara_varian";

        try (PreparedStatement insertStmt = conn.prepareStatement(insertSQL)) {
            insertStmt.setString(1, idPembelianVarian); // Indeks 1 untuk parameter pertama
            insertStmt.executeUpdate();
        }

    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }
}



    
    private void dataTabelSementara() {
        int row = tblDataSementara.getSelectedRow();
        
        if(row!=-1) {
            
        txtId.setText(tblDataSementara.getValueAt(row, 0).toString());
        txtIdVarian.setText(tblDataSementara.getValueAt(row, 1).toString());
        txtNama.setText(tblDataSementara.getValueAt(row, 2).toString());
        txtStokVarian.setText(tblDataSementara.getValueAt(row, 3).toString());
        txtSatuanVarian.setText(tblDataSementara.getValueAt(row, 4).toString());
        txtJumlahBeli.setText(tblDataSementara.getValueAt(row, 5).toString());
        cbxSatuan.setSelectedItem(tblDataSementara.getValueAt(row, 6).toString());
        txtStok.setText(tblDataSementara.getValueAt(row, 7).toString());
        txtHargaBeli.setText(tblDataSementara.getValueAt(row, 8).toString());
        txtHargaSatuan.setText(tblDataSementara.getValueAt(row, 9).toString());
        
        }
    }
    
    private void updateData() {
    String idPembelian = txtId.getText();
    String idVarian = txtIdVarian.getText();
    String namaVarian = txtNama.getText();
    String stok = txtStokVarian.getText();
    String satuanVarian = txtSatuanVarian.getText();
    String jumlahBeli = txtJumlahBeli.getText();
    String satuan = cbxSatuan.getSelectedItem().toString();
    String totalStok = txtStok.getText();
    String hargaBeli = txtHargaBeli.getText();
    String hargaSatuan = txtHargaSatuan.getText();

    if (idPembelian.isEmpty() || idVarian.isEmpty() || jumlahBeli.isEmpty() || cbxSatuan.getSelectedItem().toString().equals("Pilih Satuan Varian") || hargaBeli.isEmpty() 
        || txtStok.getText().isEmpty() || txtHargaSatuan.getText().isEmpty()) {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "SEMUA KOLOM HARUS DI-ISI");
            panel.showNotification();
        }
            return;
    }

    try {
        String sql = "UPDATE sementara_varian SET id_pembelian_varian=?, nama_varian=?, stok_varian=?, satuan_varian=?, jumlah=?, satuan=?, stok=?, harga_beli=?, harga_satuan=? WHERE id_varian=?";
        try (PreparedStatement st = conn.prepareStatement(sql)) {
            st.setString(1, idPembelian);
            st.setString(2, namaVarian);
            st.setString(3, stok);
            st.setString(4, satuanVarian);
            st.setString(5, jumlahBeli);
            st.setString(6, satuan);
            st.setString(7, totalStok);
            st.setString(8, hargaBeli);
            st.setString(9, hargaSatuan);
            st.setString(10, idVarian);

            int rowUpdated = st.executeUpdate();
            if (rowUpdated > 0) {
                JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, "DATA BERHASIL DIPERBARUI");
            panel.showNotification();
        }

                // Update total harga setelah data diperbarui
                int totalHarga = getTotalHarga(idPembelian);
                txtTotalPembelian.setText(String.valueOf(totalHarga));

                resetForm();
                loadDataSementara();
                btnUbah.setVisible(false);
                btnDelete.setVisible(false);
                btnCancel1.setVisible(false);
                btnGenerate.setVisible(false);
                btnBatalGenerate.setVisible(false);
                txtJumlahBeli.setEnabled(false);
                txtHargaBeli.setEnabled(false);
                cbxSatuan.setEnabled(false);
            }
        }
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
    }
}

    private void deleteData() {
    int selectedRow = tblDataSementara.getSelectedRow();
    if (selectedRow == -1) {
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.INFO, Notification.Location.TOP_CENTER, "PILIH DATA YANG INGIN DHAPUS");
            panel.showNotification();
        }
            return;
    }
    int confirm = JOptionPane.showConfirmDialog(this,
            "Apakah yakin ingin menghapus data ini?",
            "Konfirmasi Hapus Data",
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Ambil ID dari kolom pertama (indeks 0)
        String id = tblDataSementara.getValueAt(selectedRow, 1).toString();

        try {
            String sql = "DELETE FROM sementara_varian WHERE id_varian=?";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, id);

                int rowDeleted = st.executeUpdate();
                if (rowDeleted > 0) {
                    JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
                    if (frame != null) {
                    Notification panel = new Notification(frame, Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, "DATA BERHASIL DIHAPUS");
                    panel.showNotification();
                }
            
                    
                    int totalHarga = getTotalHarga(txtId.getText());
                    txtTotalPembelian.setText(String.valueOf(totalHarga));
                    
                    loadDataSementara(); // Refresh tabel setelah penghapusan
                    
                } else {
                    
                    JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
                    if (frame != null) {
                    Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "DATA GAGAL DIHAPUS");
                    panel.showNotification();
                }
            
                }
            }
        } catch (Exception e) {
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    btnSetVarian.setVisible(false);
    btnUbah.setVisible(false);
    btnDelete.setVisible(false);
    btnCancel1.setVisible(false);
    btnGenerate.setVisible(false);
    btnBatalGenerate.setVisible(false);
    txtJumlahBeli.setEnabled(false);
    txtHargaBeli.setEnabled(false);
    cbxSatuan.setEnabled(false);
    resetForm();
    loadDataSementara();
}
    private void deleteDataSementara(){
        try {
            String sql =  "DELETE FROM sementara_varian";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.executeUpdate();
                }   
        } catch (Exception e) {
            Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE,null,e);
        }
    }

    private void searchData() {
    String kataKunci = txtSearch.getText().trim(); // Menghapus spasi di awal/akhir input
    
    
    DefaultTableModel model = (DefaultTableModel) tblData.getModel();
    model.setRowCount(0);

    try {
        String sql = "SELECT pv.id_pembelian_varian, pv.tgl_pembelian, pv.total_harga_pembelian, u.nama FROM pembelian_varian pv "
        + "INNER JOIN user u ON u.id_user = pv.id_user "
        + "WHERE pv.id_pembelian_varian LIKE ? OR pv.tgl_pembelian LIKE ? OR pv.total_harga_pembelian LIKE ? OR u.nama LIKE ?";

        try (PreparedStatement st = conn.prepareStatement(sql)) {
            // Set parameter query untuk semua kolom
            st.setString(1, "%" + kataKunci + "%");
            st.setString(2, "%" + kataKunci + "%");
            st.setString(3, "%" + kataKunci + "%");
            st.setString(4, "%" + kataKunci + "%");

            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                String idPembelianVarian = rs.getString("id_pembelian_varian");
                String tglPembelian = rs.getString("tgl_pembelian");
                int totalHargaPembelian = rs.getInt("total_harga_pembelian");
                String namaUser = rs.getString("nama");
                Object[] rowData = {idPembelianVarian, tglPembelian, totalHargaPembelian,namaUser};
                model.addRow(rowData);
            }
        }
    } catch (Exception e) {
        Logger.getLogger(menuPembelianVarian.class.getName()).log(Level.SEVERE, null, e);
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            if (frame != null) {
            Notification panel = new Notification(frame, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "Terjadi kesalahan saat mencari data: " + e.getMessage());
            panel.showNotification();
        }
    }
}


    
}
