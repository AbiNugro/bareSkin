/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bareSkinLogin;

import config.koneksi;
import java.awt.Toolkit;
import java.awt.datatransfer.DataFlavor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import kasiramanah.MenuUtama;
import notification.Notification;

/**
 *
 * @author user
 */
public class loginBareSkinRFID extends javax.swing.JFrame {

    /**
     * Creates new form loginBareSkin
     */
    private Connection conn;
    private Timer timer;

    public loginBareSkinRFID() {
        conn = koneksi.getConnection();
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setDate();
        lbDate.setVisible(false);
        noText();
        getClipboardData();
        // t_rfid.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCustom1 = new custom.PanelCustom();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_login = new rojerusan.RSMaterialButtonRectangle();
        lbDate = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        t_rfid = new custom.JTextFieldRounded();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelCustom1.setBackground(new java.awt.Color(255, 255, 255));
        panelCustom1.setRoundBottomLeft(75);
        panelCustom1.setRoundBottomRight(75);
        panelCustom1.setRoundTopLeft(75);
        panelCustom1.setRoundTopRight(75);
        panelCustom1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 64)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(75, 22, 76));
        jLabel6.setText("SCAN");
        panelCustom1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(75, 22, 76));
        jLabel4.setText("please scan your id card to access bareSkin");
        panelCustom1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/idCard.png"))); // NOI18N
        panelCustom1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 240, -1, -1));

        btn_login.setBackground(new java.awt.Color(75, 22, 76));
        btn_login.setText("BACK");
        btn_login.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        panelCustom1.add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, 110, 50));

        getContentPane().add(panelCustom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 192, 969, 664));
        getContentPane().add(lbDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/(1920 x 1080 px) (1).png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        t_rfid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_rfidActionPerformed(evt);
            }
        });
        t_rfid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_rfidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t_rfidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_rfidKeyTyped(evt);
            }
        });
        getContentPane().add(t_rfid, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 440, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_rfidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_rfidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_rfidActionPerformed

    private void t_rfidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_rfidKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) { 
        evt.consume(); // Mencegah input selain angka
    }
    }//GEN-LAST:event_t_rfidKeyTyped

    private void t_rfidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_rfidKeyReleased
        if (t_rfid.getText().length() >= 10) {
            boolean loginBerhasil = prosesLogin();
            
            if (!loginBerhasil) {
                t_rfid.setText(""); // Hapus teks jika login gagal
            }
        }
    }//GEN-LAST:event_t_rfidKeyReleased

    private void t_rfidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_rfidKeyPressed
       /* if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        prosesLogin();
    } */
    }//GEN-LAST:event_t_rfidKeyPressed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        loginBareSkin rf = new loginBareSkin(); 
        rf.setVisible(true);
        this.dispose(); 
        dispose();
    }//GEN-LAST:event_btn_loginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginBareSkinRFID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginBareSkinRFID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginBareSkinRFID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginBareSkinRFID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginBareSkinRFID().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private rojerusan.RSMaterialButtonRectangle btn_login;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lbDate;
    private custom.PanelCustom panelCustom1;
    private custom.JTextFieldRounded t_rfid;
    // End of variables declaration//GEN-END:variables
    
    private void noText() {


    t_rfid.addKeyListener(new KeyAdapter() {
        @Override
        public void keyPressed(KeyEvent e) {
            if (e.isControlDown() && e.getKeyCode() == KeyEvent.VK_V) {
                String clipboardData = getClipboardData();
                t_rfid.setText(clipboardData);
                prosesLogin(); 
            }
        }
    });
    }
    
    private String getClipboardData() {
        String data = "";
        try {
            data = (String) Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return data;
    }
    private void setDate(){
        timer = new Timer(100, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                Calendar calender = Calendar.getInstance();
                Date now = new Date();
                SimpleDateFormat formatHari = new SimpleDateFormat("EEEE", new Locale("in","ID"));
                SimpleDateFormat formatTanggal  = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                String hari = formatHari.format(calender.getTime());
                String waktuTanggal = formatTanggal.format(now);
                lbDate.setText(hari+", "+waktuTanggal);
            }
        });
        
        timer.start();
    }
    
    private boolean validasiInput(){
        boolean valid = false;
        if(t_rfid.getText().trim().isEmpty()){
            Notification panel = new Notification(this, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "RFID TIDAK TERDAFTARR");
            panel.showNotification();
        }else{
            valid = true;
        }
        return valid;
    }
    
    private Map<String, String> checkLogin(String rfid) {
    Map<String, String> result = new HashMap<>();

    if (conn != null) {
        try {
            // Pastikan query menggunakan BINARY untuk membandingkan case-sensitive pada kolom username
            String sql = "SELECT * FROM user WHERE BINARY rfid=?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, rfid);

            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                result.put("id_user", rs.getString("id_user"));
                result.put("rfid", rs.getString("rfid"));
                result.put("level", rs.getString("level"));
                return result;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    return null;
    }
    
    private boolean prosesLogin() {
    if (validasiInput()) {
        String rfid = t_rfid.getText();
        
        // Hapus hashing password dan panggilan checkLogin
        Map<String, String> loginResult = checkLogin(rfid);
        
        if(loginResult != null){
            String id_user = loginResult.get("id_user");
            String nama = loginResult.get("nama");
            String level = loginResult.get("level");
            
            MenuUtama mn = new MenuUtama(id_user, nama, level);
            mn.setVisible(true);
            mn.revalidate();
            dispose();
            return true;
        } else {
            Notification panel = new Notification(this, Notification.Type.WARNING, Notification.Location.TOP_CENTER, "RFID Tidak terdaftar");
            panel.showNotification();
        }
    } return false;
}

    
}
