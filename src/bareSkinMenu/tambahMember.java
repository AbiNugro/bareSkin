package bareSkinMenu;

import config.koneksi;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 *
 * @author user
 */
public class tambahMember extends javax.swing.JDialog {
    
    private int halamanSaatIni = 1;
    private int dataPerHalaman = 14;
    private int totalPages;
    private Connection conn;
    
    private String id_member;
    private String nama_member;
    private String alamat;
    private String no_telepon;
    private String poin;
    
    public String getId_member() {
        return id_member;
    }

    public String getNama_member() {
        return nama_member;
    }

    public String getAlamat() {
        return alamat;
    }

    public String getNo_telepon() {
        return no_telepon;
    }
    
    public String getPoin() {
        return poin;
    }

    public tambahMember(java.awt.Frame parent, boolean modal, String id, 
            String nama, String alamat, String nomor, String poin) {
    super(parent, modal);
    initComponents();
    setLocationRelativeTo(null);
    max10digit();
    conn = koneksi.getConnection();
    finishing();

    // Set data ke field dan komponen input
    this.id_member = id;
    this.nama_member = nama;
    this.alamat = alamat;
    this.no_telepon = nomor;
    this.poin = poin;

    txtIdMember.setText(id);
    txtNamaMember.setText(nama);
    txtAlamat.setText(alamat);
    txtNomorTelepon.setText(nomor);
    txtPoin.setText(poin);
    btnSimpan.setText("SIMPAN");
    
    if (!txtIdMember.getText().trim().isEmpty()) {
        btnSimpan.setText("UBAH");
        txtIdMember.setEnabled(false);
        fieldColor(txtIdMember);
    } 
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelView = new javax.swing.JPanel();
        databahan = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtIdMember = new custom.JTextFieldRounded();
        jLabel23 = new javax.swing.JLabel();
        txtAlamat = new custom.JTextFieldRounded();
        txtNamaMember = new custom.JTextFieldRounded();
        jLabel28 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtNomorTelepon = new custom.JTextFieldRounded();
        jLabel32 = new javax.swing.JLabel();
        txtPoin = new custom.JTextFieldRounded();
        btnSimpan = new rojerusan.RSMaterialButtonRectangle();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelView.setBackground(new java.awt.Color(255, 255, 255));
        panelView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        databahan.setBackground(new java.awt.Color(75, 22, 76));
        databahan.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        databahan.setForeground(new java.awt.Color(75, 22, 76));
        databahan.setText("TAMBAH MEMBER");
        panelView.add(databahan, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel22.setText("ID Member");
        panelView.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        txtIdMember.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        txtIdMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdMemberActionPerformed(evt);
            }
        });
        panelView.add(txtIdMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 150, 50));

        jLabel23.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel23.setText("Nama Member");
        panelView.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        txtAlamat.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        panelView.add(txtAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 430, 50));

        txtNamaMember.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        panelView.add(txtNamaMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 430, 50));

        jLabel28.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel28.setText("Poin");
        panelView.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 200, -1, -1));

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel31.setText("Nomor Telepon");
        panelView.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, -1, -1));

        txtNomorTelepon.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        panelView.add(txtNomorTelepon, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, 180, -1));

        jLabel32.setFont(new java.awt.Font("SansSerif", 1, 22)); // NOI18N
        jLabel32.setText("Alamat");
        panelView.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, -1, -1));

        txtPoin.setText("0");
        txtPoin.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        txtPoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPoinActionPerformed(evt);
            }
        });
        panelView.add(txtPoin, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 240, 80, -1));

        btnSimpan.setBackground(new java.awt.Color(75, 22, 76));
        btnSimpan.setText("SIMPAN");
        btnSimpan.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        panelView.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 170, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelView, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelView, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if(btnSimpan.getText().equals("SIMPAN"))
            {
                insertData();
            }
        else if(btnSimpan.getText().equals("UBAH"))
            {
                updateData();
            }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtIdMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdMemberActionPerformed

    private void txtPoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPoinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPoinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle btnSimpan;
    private javax.swing.JLabel databahan;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel panelView;
    private custom.JTextFieldRounded txtAlamat;
    private custom.JTextFieldRounded txtIdMember;
    private custom.JTextFieldRounded txtNamaMember;
    private custom.JTextFieldRounded txtNomorTelepon;
    private custom.JTextFieldRounded txtPoin;
    // End of variables declaration//GEN-END:variables

    private void max10digit() {
    txtIdMember.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            
            if (Character.isISOControl(c)) {
                return;
            }
            
            if (!Character.isDigit(c)) {
                e.consume();
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "ID hanya boleh berisi angka!");
                return;
            }
            
            if (txtIdMember.getText().length() >= 10) {
                e.consume(); 
                Toolkit.getDefaultToolkit().beep(); 
                JOptionPane.showMessageDialog(null, "ID Product tidak boleh lebih dari 10 digit.");
            }
        }
    });
    
    txtNomorTelepon.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            char c = e.getKeyChar();
            
            if (Character.isISOControl(c)) {
                return;
            }
            
            if (!Character.isDigit(c)) {
                e.consume();
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Nomor hanya boleh berisi angka!");
                return;
            }
            
            if (txtNomorTelepon.getText().length() >= 13) {
                e.consume(); 
                Toolkit.getDefaultToolkit().beep(); 
                JOptionPane.showMessageDialog(null, "ID Product tidak boleh lebih dari 13 digit.");
            }
        }
    });
}
    
    private void fieldColor(JTextField field) {
        field.setOpaque(true);
        field.setEditable(false);
        field.setBackground(new Color(219, 219, 219));
    }

    private void finishing() {
        fieldColor(txtPoin);
    }
    
    private void resetForm() {
        txtIdMember.setText("");
        txtNamaMember.setText("");
        txtAlamat.setText("");
        txtNomorTelepon.setText("");
        txtPoin.setText("0");
    }
    
    private void insertData() {
        String id_member = txtIdMember.getText().trim();
        String nama_member = txtNamaMember.getText().trim();
        String alamat = txtAlamat.getText().trim();
        String no_telepon = txtNomorTelepon.getText().trim();
        String poin = txtPoin.getText().trim();

        if (id_member.isEmpty() || nama_member.isEmpty() || alamat.isEmpty() 
                || no_telepon.isEmpty() || poin.isEmpty()) {
            // Menggunakan JOptionPane untuk menampilkan pesan peringatan
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Di-isi", 
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String sql = "INSERT INTO member (id_member, nama_member, alamat, no_telepon, poin) "
                    + "VALUES (?, ?, ?, ?, ?)";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, id_member);
                st.setString(2, nama_member);
                st.setString(3, alamat);
                st.setString(4, no_telepon);
                st.setInt(5, Integer.parseInt(poin));

                int rowInserted = st.executeUpdate();
                if (rowInserted > 0) {
                    // Notifikasi sukses
                    JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan", 
                            "Sukses", JOptionPane.INFORMATION_MESSAGE);

                    resetForm();
                    dispose();
                }
            }
        } catch (Exception e) {
            Logger.getLogger(tambahMember.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void updateData() {
        String id_member = txtIdMember.getText();
        String nama_member = txtNamaMember.getText();
        String alamat = txtAlamat.getText();
        String no_telepon = txtNomorTelepon.getText();
        String poin = txtPoin.getText();
        
        
        if (id_member.isEmpty() || nama_member.isEmpty() || alamat.isEmpty() 
                || no_telepon.isEmpty() || poin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus Di-isi", 
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            String sql = "UPDATE member SET nama_member=?, alamat=?, no_telepon=?,poin=? "
                    + "WHERE id_member=?";
            try(PreparedStatement st = conn.prepareStatement(sql)){
                st.setString(1, nama_member);
                st.setString(2, alamat);
                st.setString(3, no_telepon);
                st.setInt(4, Integer.parseInt(poin));
                st.setString(5, id_member);

                
                int rowInserted = st.executeUpdate();
                if (rowInserted > 0) {
                    // Notifikasi sukses
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diubah", 
                            "Sukses", JOptionPane.INFORMATION_MESSAGE);

                    resetForm();
                    dispose();
                }
            }
        } catch (Exception e) {
            Logger.getLogger(tambahMember.class.getName()).log(Level.SEVERE, null, e);
        }
    }

}


